import fonts.fontAwesome;

import win.ui;
/*DSG{{*/
var winform = win.form(text="字幕总结";right=759;bottom=785)
winform.add(
button={cls="button";text="总结归纳去水";left=639;top=735;right=744;bottom=775;z=1};
edit={cls="edit";left=6;top=740;right=611;bottom=772;edge=1;multiline=1;z=2};
plus={cls="plus";left=7;top=10;right=39;bottom=40;bgcolor=-5197169;font=LOGFONT(h=-16);iconStyle={font=LOGFONT(h=-13;name='FontAwesome')};iconText='\uF0C5';notify=1;z=4};
plus2={cls="plus";left=47;top=11;right=79;bottom=41;bgcolor=-5197169;font=LOGFONT(h=-16);iconStyle={font=LOGFONT(h=-13;name='FontAwesome')};iconText='\uF014';notify=1;z=5};
richedit={cls="richedit";left=4;top=44;right=756;bottom=730;edge=1;multiline=1;vscroll=1;wrap=1;z=3}
)
/*}}*/

import fsys.dlg
import thread.command
import string.gfmark
import inet.url
import bili
import fsys.config
import win.dlg.message
import web.form
var wb = web.form( winform.richedit , , ,,true); 
wb.noScriptErr = true;

wb.html = /**
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title></title>
<style type="text/css">
body {
    font-family: Helvetica, arial, sans-serif;
    font-size: 14px;
    line-height: 1.6;
    padding-top: 10px;
    padding-bottom: 10px;
    background-color: white;
    padding: 30px; 
}
body > *:first-child {
    margin-top: 0 !important; 
}
body > *:last-child {
    margin-bottom: 0 !important; 
}
details summary {
    cursor:pointer;
}
a {
    color: #4183C4; 
}
a.absent {
    color: #cc0000; 
}
a.anchor {
    display: block;
    padding-left: 30px;
    margin-left: -30px;
    cursor: pointer;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0; 
}
h1, h2, h3, h4, h5, h6 {
	line-height: 1.5em;
    margin: 20px 0 10px;
    padding: 0;
    font-weight: bold;
    -webkit-font-smoothing: antialiased;
    cursor: text;
    position: relative; 
}
h1:hover a.anchor, h2:hover a.anchor, h3:hover a.anchor, h4:hover a.anchor, h5:hover a.anchor, h6:hover a.anchor {
    text-decoration: none; 
}
h1 tt, h1 code {
    font-size: inherit; 
}
h2 tt, h2 code {
    font-size: inherit; 
}
h3 tt, h3 code {
    font-size: inherit; 
}
h4 tt, h4 code {
    font-size: inherit; 
}
h5 tt, h5 code {
    font-size: inherit; 
}
h6 tt, h6 code {
    font-size: inherit; 
}
h1 {
    font-size: 24px;
    color: black; 
    border-bottom: none;
	padding-bottom: 3px;
	text-align:center;
}
h2 {
    font-size: 18px;
    border-bottom: 3px solid #aaa;
    color: #444;
}
h3 {
    font-size: 17px; 
    border-bottom: 2px solid #aaa;
    color: #555;
}
h4 {
    font-size: 16px; 
    border-bottom: 1px solid #aaa;
    color: #666;
}
h5 {
    font-size: 15px; 
    border-bottom: 1px dotted #aaa;
    color: #777;
}
h6 {
    font-size: 14px; 
    border-bottom: 1px dotted #793862;
    color: #793862;
}
p, blockquote, ul, ol, dl, li, table, pre {
    margin: 15px 0; 
}
hr {
    border: 0 none;
    color: #cccccc;
    height: 4px;
    padding: 0; 
}

body > h2:first-child {
    margin-top: 0;
    padding-top: 0; 
}
body > h1:first-child {
    margin-top: 0;
    padding-top: 0;
}
body > h1:first-child + h2 {
    margin-top: 0;
    padding-top: 0; 
}
body > h3:first-child, body > h4:first-child, body > h5:first-child, body > h6:first-child {
    margin-top: 0;
    padding-top: 0; 
}
a:first-child h1, a:first-child h2, a:first-child h3, a:first-child h4, a:first-child h5, a:first-child h6 {
    margin-top: 0;
    padding-top: 0; 
}
h1 p, h2 p, h3 p, h4 p, h5 p, h6 p {
    margin-top: 0; }

li p.first {
    display: inline-block; 
}
ul, ol {
    padding-left: 30px; 
}
ul :first-child, ol :first-child {
    margin-top: 0; 
}
ul :last-child, ol :last-child {
    margin-bottom: 0; 
}
dl {
    padding: 0; 
}
dl dt {
    font-size: 14px;
    font-weight: bold;
    font-style: italic;
    padding: 0;
    margin: 15px 0 5px; 
}
dl dt:first-child {
    padding: 0; 
}
dl dt > :first-child {
    margin-top: 0; 
}
dl dt > :last-child {
    margin-bottom: 0; 
}
dl dd {
    margin: 0 0 15px;
    padding: 0 15px; 
}
dl dd > :first-child {
    margin-top: 0; 
}
dl dd > :last-child {
    margin-bottom: 0; 
}
blockquote {
    border-left: 4px solid #dddddd;
    padding: 0 15px;
    color: #777777; 
}
blockquote > :first-child {
    margin-top: 0; 
}
blockquote > :last-child {
    margin-bottom: 0; 
}
table {
    padding: 0; 
}
table tr {
    border-top: 1px solid #cccccc;
    background-color: white;
    margin: 0;
    padding: 0; 
}
table tr:nth-child(2n) {
    background-color: #f8f8f8; 
}
table tr th {
    font-weight: bold;
    border: 1px solid #cccccc;
    text-align: left;
    margin: 0;
    padding: 6px 13px; 
}
table tr td {
    border: 1px solid #cccccc;
    text-align: left;
    margin: 0;
    padding: 6px 13px; 
}
table tr th :first-child, table tr td :first-child {
    margin-top: 0; 
}
table tr th :last-child, table tr td :last-child {
    margin-bottom: 0; 
}
img {
    max-width: 100%; 
}
span.frame {
    display: block;
    overflow: hidden; 
}
span.frame > span {
    border: 1px solid #dddddd;
    display: block;
    float: left;
    overflow: hidden;
    margin: 13px 0 0;
    padding: 7px;
    width: auto; 
}
span.frame span img {
    display: block;
    float: left; 
 }
span.frame span span {
    clear: both;
    color: #333333;
    display: block;
    padding: 5px 0 0; 
}
span.align-center {
    display: block;
    overflow: hidden;
    clear: both; 
}
span.align-center > span {
    display: block;
    overflow: hidden;
    margin: 13px auto 0;
    text-align: center; 
}
span.align-center span img {
    margin: 0 auto;
    text-align: center; 
 }
span.align-right {
    display: block;
    overflow: hidden;
    clear: both; 
}
span.align-right > span {
    display: block;
    overflow: hidden;
    margin: 13px 0 0;
    text-align: right; 
}
span.align-right span img {
    margin: 0;
    text-align: right; 
}
span.float-left {
    display: block;
    margin-right: 13px;
    overflow: hidden;
    float: left; 
}
span.float-left span {
    margin: 13px 0 0; 
}
span.float-right {
    display: block;
    margin-left: 13px;
    overflow: hidden;
    float: right; 
}
span.float-right > span {
    display: block;
    overflow: hidden;
    margin: 13px auto 0;
    text-align: right; 
}
code, tt {
    margin: 0 2px;
    padding: 0 5px;
    white-space: nowrap;
    border: 1px solid #eaeaea;
    background-color: #f8f8f8;
    border-radius: 3px; 
}
pre code {
    margin: 0;
    padding: 0;
    white-space: pre;
    border: none;
    background: transparent; 
}
.highlight pre {
    background-color: #f8f8f8;
    border: 1px solid #cccccc;
    font-size: 13px;
    line-height: 19px;
    overflow: auto;
    padding: 6px 10px;
    border-radius: 3px; 
}
pre {
    background-color: #f8f8f8;
    border: 1px solid #cccccc;
    font-size: 13px;
    line-height: 19px;
    overflow: auto;
    padding: 6px 10px;
    border-radius: 3px; 
}
pre code, pre tt {
    background-color: transparent;
    border: none; 
}
</style>
</head>
<body>
</body>
</html>	 
**/

winform.plus.skin({
	background={
		default=0x668FB2B0;
		disabled=0xFFCCCCCC;
		hover=0xFF928BB3
	};
	color={
		default=0xFF000000;
		disabled=0xFF6D6D6D
	}
})

winform.plus2.skin({
	background={
		default=0x668FB2B0;
		disabled=0xFFCCCCCC;
		hover=0xFF928BB3
	};
	color={
		default=0xFF000000;
		disabled=0xFF6D6D6D
	}
})

var listener = thread.command();
var markdownContainer = "";
listener.$updateWb = function( str ){
	var str = eval(string.format("'%s'",str ))
	markdownContainer = string.concat( markdownContainer,str )
	wb.body.innerHTML = string.gfmark.render( markdownContainer )
}

var config = fsys.config()
winform.button.oncommand = function(id,event){
	var path = winform.edit.text
	var subText
	if(#path){
		var isUrl = inet.url.is(path,0x0/*_URLIS_URL*/)
		if(isUrl){
			var bvid = string.match(path,"bilibili\.com/video/(BV\w+)[\/]*")
			var bilibili = bili(config.winform.input_bili_token)
			var url = bilibili.getSubtitles(bvid)
			if(url){
				subText = bilibili.parse2vtt(url)
			}else {
				win.dlg.message().info("该视频不存在CC字幕或B站token过期")
				return ; 
			}
		}elseif(io.exist(path)){
			subText = string.load(path)
		}
	}
	else {
		path = fsys.dlg.open()
		if !path return ; 
		subText = string.load(path)	
	}
	winform.edit.text = path
	winform.button.disabled = true
	winform.button.text = "运行中-0%"
	winform.richedit.text = ""
	markdownContainer = ""
	thread.invoke(
		function(subText,winform){
			import chatgpt.summary;
			import thread.command;
			import fsys.config
			import web.json
			var config = fsys.config()
			var gpt = chatgpt.summary(config.winform.input_apikey,subText,config.winform.input_proxy,config.winform.input_prompt)
			var assitContent = ""
			callback = function(recvData,recvSize){
				var arr = table.map( 
					string.split(recvData,'<\n\n>'),
					lambda(item) web.json.parse( item )
				)
				
				var out = reduce(arr,function(prev,next,index,arr){
							if(next.data[1]!="DONE"){
								assitContent = string.concat( assitContent,next.data.choices[1].delta[["content"]] )
								return string.concat(prev,next.data.choices[1].delta[["content"]]); 
							}else {
								table.push( gpt.messages,{ "role": "assistant", "content": assitContent } )
								assitContent = ""
								return string.concat(prev,'\n\n')
							}
						  },"")
				thread.command.$updateWb(out)
			}

			for a,status,ratio in gpt.eachChunck(,true,callback){
				if(!status){
					break;
				}
				winform.button.text = string.format("运行中-%.02f", ratio*100) + "%"
			}
			winform.button.disabled = false
			winform.button.text = "总结归纳去水"
			
		},subText,winform
	)
}

winform.plus.oncommand = function(id,event){
	import win.clip
	win.clip.write(markdownContainer)
}

winform.plus2.oncommand = function(id,event){
	markdownContainer = ""
	wb.body.innerHTML = ""
}

winform.show();
win.loopMessage();
return winform;